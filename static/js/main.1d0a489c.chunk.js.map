{"version":3,"sources":["services/BaseService.ts","services/env.ts","services/errors/ApiError.ts","services/errors/BadRequest.ts","services/errors/Unauthorized.ts","services/errors/NetworkError.ts","services/errors/NotFoundError.ts","services/errors/ForbiddenError.ts","services/errors/UnprocessableEntity.ts","services/BoxOfficeService.ts","Movies/MovieList.styles.ts","Movies/MovieSummary.styles.ts","Component/UI/Spinner.tsx","Movies/MovieSummary.tsx","Movies/MovieList.tsx","Component/navbar/NavBar.tsx","Component/NoData/NoData.tsx","home/HomeContainer.tsx","reportWebVitals.ts","index.tsx"],"names":["HttpMethod","env","REACT_APP_API_BASE_URL","process","REACT_APP_ACCESS_TOKEN","ApiError","name","message","stack","this","BadRequest","calculatedMessage","undefined","Error","Unauthorized","NetworkError","NotFoundError","ForbiddenError","UnprocessableEntity","errors","validate","response","a","ok","status","Promise","reject","extract","apiResponse","text","then","JSON","parse","key","value","extractBody","service","source","movieId","get","baseUrl","resourcePath","headers","performRequest","Get","filename","createRequest","request","fetch","blob","url","window","URL","createObjectURL","document","createElement","href","download","body","appendChild","click","remove","revokeObjectURL","method","data","Headers","append","Request","stringify","credentials","catch","createStyles","head","backgroundColor","color","textAlign","summaryTable","minWidth","whiteSpace","inputField","width","header","marginBottom","menuRow","paddingLeft","paddingRight","height","tableHead","root","maxWidth","media","paddingTop","expand","transform","marginLeft","expandOpen","clear","tiles","borderRadius","display","fontWeight","letterSpacing","lineHeight","margin","padding","float","cheaper","expensive","NA","spinner","className","PriceCompare","price","comparePrice","classes","MovieSummary","props","filmWorldMovieDetails","cinemaWorldMovieDetails","onClosePopup","movieDetails","Card","CardHeader","action","IconButton","onClick","title","Title","subheader","Year","CardContent","Country","Language","Rating","Price","Typography","paragraph","Plot","React","Component","withStyles","styles","MovieList","state","showPopup","handleSelectMovie","movie","onSelectMovie","closePopup","setState","movies","Container","TableContainer","component","Paper","Table","size","stickyHeader","TableHead","TableRow","TableCell","TableBody","map","index","Fragment","hover","style","background","useStyles","makeStyles","flexGrow","ButtonAppBar","AppBar","position","Toolbar","variant","bullet","fontSize","pos","SimpleCard","gutterBottom","HomeContainer","loader","error","_isMounted","handleFilmWorld","result","localStorage","setItem","handleCinemaWorld","updateState","filmWorldMovieResquest","BoxOfficeService","getMovieById","FilmWorldID","cinemaWorldRequest","CinemaWorldID","allSettled","filmWorld","cinemaWorld","loadMovies","getItem","all","getMovies","FWMovies","CWMovies","PopulateMovieList","movieListFilmWorld","movieListCinemaWorld","movieList","Movies","movieAggregate","Poster","ID","find","c","Type","push","updatedState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1d0a489c.chunk.js","sourcesContent":["import env from './env';\nimport BadRequest from './errors/BadRequest';\nimport Unauthorized from './errors/Unauthorized';\nimport NetworkError from './errors/NetworkError';\nimport NotFoundError from './errors/NotFoundError';\nimport ForbiddenError from './errors/ForbiddenError';\nimport UnprocessableEntity from './errors/UnprocessableEntity';\n\nenum HttpMethod {\n  Get = 'GET',\n  Post = 'POST',\n  Put = 'PUT'\n}\n\nexport default abstract class BaseService {\n  private readonly baseUrl: string = env.REACT_APP_API_BASE_URL;\n\n  protected get(resourcePath: string, headers?: Headers) {\n    return this.performRequest(resourcePath, HttpMethod.Get, headers);\n  }\n\n  protected async download(\n    resourcePath: string,\n    filename: string,\n    headers?: Headers\n  ) {\n    var request = await this.createRequest(\n      resourcePath,\n      HttpMethod.Get,\n      headers\n    );\n\n    return this.fetch(request)\n      .then(response => response.blob())\n      .then(blob => {\n        var url = window.URL.createObjectURL(blob);\n        // create file link for blob\n        var a = document.createElement('a');\n        a.href = url;\n        a.download = filename;\n        // append element to the dom\n        document.body.appendChild(a);\n        a.click();\n        // remove element after click\n        a.remove();\n        // make sure to remove object url, to release memory\n        window.URL.revokeObjectURL(url);\n      });\n  }\n\n  private async performRequest(\n    resourcePath: string,\n    method: HttpMethod,\n    headers?: Headers,\n    data?: any\n  ) {\n    const request = await this.createRequest(\n      resourcePath,\n      method,\n      headers,\n      data\n    );\n\n    return this.fetch(request).then(extractBody);\n  }\n\n  private async createRequest(\n    resourcePath: string,\n    method: HttpMethod,\n    headers?: Headers,\n    data?: any\n  ) {\n    headers = new Headers(headers);\n    headers.append('x-access-token', env.REACT_APP_ACCESS_TOKEN+'');\n    headers.append('Content-Type', 'application/json;charset=utf-8');\n\n    const url = `${this.baseUrl}${resourcePath}`;\n\n    return new Request(url, {\n      headers,\n      method,\n      body: JSON.stringify(data),\n      credentials: 'same-origin'\n    });\n  }\n\n  private async fetch(request: Request) {\n    return fetch(request)\n      .catch(() => Promise.reject(new NetworkError()))\n      .then(validate);\n  }\n}\n\nasync function validate(response: Response) {\n  if (response.ok) {\n    return response;\n  }\n\n  if (response.status === 401) {\n    return Promise.reject(new Unauthorized());\n  }\n\n  if (response.status === 403) {\n    return Promise.reject(new ForbiddenError());\n  }\n\n  if (response.status === 404) {\n    return Promise.reject(new NotFoundError());\n  }\n\n  if (response.status === 422) {\n    const apiResponse = await extract(response);\n    return Promise.reject(new UnprocessableEntity(apiResponse.errors));\n  }\n\n  // Handle client errors\n  if (response.status >= 400 && response.status < 499) {\n    return Promise.reject(new BadRequest());\n  }\n\n  if (response.status === 302) {\n    return Promise.reject(new Unauthorized());\n  }\n\n  // Handle server errors\n  if (response.status >= 500 && response.status < 600) {\n    return Promise.reject(new NetworkError());\n  }\n\n  return response;\n}\n\nasync function extract(response: Response): Promise<any> {\n  return response.text().then(\n    text =>\n      text &&\n      JSON.parse(text, (key, value) => {\n        return value;\n      })\n  );\n}\n\nasync function extractBody(response: Response) {\n  return await extract(response);\n}\n","const env = {\n  REACT_APP_API_BASE_URL:process.env.REACT_APP_API_BASE_URL!,\n  REACT_APP_ACCESS_TOKEN:process.env.REACT_APP_ACCESS_TOKEN\n};\n\nexport default env;\n","export default class ApiError {\n  public name: string;\n  public message: string;\n  public stack: string | undefined;\n\n  constructor(name: string, message: string, stack: string | undefined) {\n    this.name = name;\n    this.message = message;\n    this.stack = stack;\n  }\n}\n","import ApiError from './ApiError';\n\nexport default class BadRequest extends ApiError {\n  constructor(message?: string) {\n    const calculatedMessage =\n      message === undefined ? 'Unable to complete the request' : message;\n    super('Bad Request', calculatedMessage, new Error().stack);\n  }\n}\n","import ApiError from './ApiError';\n\nexport default class Unauthorized extends ApiError {\n  constructor(message?: string) {\n    const calculatedMessage =\n      message === undefined ? 'Session time out' : message;\n    super('Unauthorized', calculatedMessage, new Error().stack);\n  }\n}\n","import ApiError from './ApiError';\n\nexport default class NetworkError extends ApiError {\n  constructor(message?: string) {\n    const calculatedMessage =\n      message === undefined ? 'Unable to connect to server' : message;\n    super('Network Error', calculatedMessage, new Error().stack);\n  }\n}\n","import ApiError from './ApiError';\n\nexport default class NotFoundError extends ApiError {\n  constructor(message?: string) {\n    const calculatedMessage =\n      message === undefined ? 'Unable to find resource' : message;\n    super('Not Found Error', calculatedMessage, new Error().stack);\n  }\n}\n","import ApiError from './ApiError';\n\nexport default class ForbiddenError extends ApiError {\n  constructor(message?: string) {\n    const calculatedMessage =\n      message === undefined ? 'Forbidden access to resource' : message;\n    super('Forbidden Error', calculatedMessage, new Error().stack);\n  }\n}\n","import ApiError from './ApiError';\n\nexport default class UnprocessableEntity extends ApiError {\n  public errors: string[];\n\n  constructor(errors: string[], message?: string) {\n    const calculatedMessage =\n      message === undefined ? 'Unable to complete the request' : message;\n    super('Unprocessable Entity', calculatedMessage, new Error().stack);\n\n    this.errors = errors;\n  }\n}\n","import BaseService from './BaseService';\nimport IMovieDetails from '../common/types/IMovieDetails';\nimport {IMovie} from '../common/types/IMovie';\n\nclass BoxOfficeService extends BaseService {\n\n  async getMovieById(source: string,movieId: string): Promise<IMovieDetails> {\n    return await this.get(`/${source}/movie/${movieId}`);\n  }\n\n  async getMovies(source: string): Promise<IMovie[]> {\n    return await this.get(`/${source}/movies`);\n  }\n\n}\n\nconst service = new BoxOfficeService();\n\nexport default service;\n","import { createStyles } from '@material-ui/core/styles';\n\nexport default createStyles({\n  head:{\n    backgroundColor: \"black\",\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  summaryTable: {\n    minWidth: 650,\n    whiteSpace: 'pre',\n   \n  },\n  inputField: {\n    width: '200px'\n  },\n  header: {\n    marginBottom: '20px',\n    backgroundColor:\"#64b5f6 !important\"\n  },\n  menuRow:{\npaddingLeft:2,\npaddingRight:1,\nheight: 55,\n  \"&:hover\": {\n    backgroundColor: \"#e3f2fd !important\" \n}\n },\n  \n\n tableHead:{\n    backgroundColor:\"#64b5f6 !important\"\n  },\n \n});\n","import { createStyles } from '@material-ui/core/styles';\n\nexport default createStyles({\n\n  inputField: {\n    width: '200px'\n  },\n  header: {\n    marginBottom: '20px'\n  },\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto'\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  clear:{\n    clear: 'both'\n   },\n  tiles:{\n   backgroundColor: '#f4f4f4',\n   borderRadius: '.0625rem',\n   color: '#6d6e73',\n   display: 'inline-block',\n   fontWeight: 500,\n   letterSpacing: '0',\n   lineHeight: 1,\n   margin:  '0 .25rem .25rem 0',\n   padding: '.1875rem .4375rem .125rem',\n   float: 'left'\n  },\n  cheaper:{\n    backgroundColor: \"rgb(234, 242, 240)\",\n    color: \"rgb(60, 110, 92)\"\n  },\n  expensive: {\n    backgroundColor: \"rgb(237, 229, 202)\",\n    color: \"rgb(116, 100, 8)\"\n  },\n  NA:\n  {\n    backgroundColor: \"#F0f0f0\",\n    color: \"rgba(0, 0, 0, 0.87)\"\n  }\n});\n","import React from 'react'\r\n import './Spinner.css'\r\n\r\n const spinner = () => {\r\n     return (\r\n         <div className=\"Loader\">Loading...</div>\r\n     )\r\n }\r\n\r\n export default spinner;","import React from \"react\";\nimport { withStyles, WithStyles } from \"@material-ui/core\";\nimport styles from \"./MovieSummary.styles\";\nimport IMovieDetails from \"../common/types/IMovieDetails\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Close from \"@material-ui/icons/Close\";\nimport Spinner from \"../Component/UI/Spinner\";\n\ninterface IProps extends WithStyles<typeof styles> {\n  filmWorldMovieDetails: IMovieDetails | undefined;\n  cinemaWorldMovieDetails: IMovieDetails | undefined;\n  onClosePopup: () => void;\n}\n\nexport var PriceCompare = function(price?: number, comparePrice?: number,classes?: any) {\n  if (price === undefined || price === comparePrice) {\n    return classes.NA;\n  } else if (comparePrice === undefined || +price < +comparePrice) {\n    return classes.cheaper;\n  } else {\n    return classes.expensive;\n  }\n  // tfilmWorldMovieDetails === undefined || filmWorldMovieDetails?.Price === cinemaWorldMovieDetails?.Price)  ? classes.NA :+(filmWorldMovieDetails?.Price ?? 99999) > +(cinemaWorldMovieDetails?.Price ?? '99999') ? classes.expensive : classes.cheaper;\n}\n\nclass MovieSummary extends React.Component<IProps> {\n  \n  render() {\n    const {\n      filmWorldMovieDetails,\n      cinemaWorldMovieDetails,\n      onClosePopup,\n      classes,\n    } = this.props;\n\n    var movieDetails = filmWorldMovieDetails ?? cinemaWorldMovieDetails;\n\n    return (\n      <div className=\"overlay\">\n        {movieDetails === undefined ? <Spinner /> : \"\"}\n        {movieDetails !== undefined ? (\n          <div className=\"summaryPanel\">\n            <Card>\n              <CardHeader\n                action={\n                  <IconButton onClick={onClosePopup}>\n                    <Close />\n                  </IconButton>\n                }\n                title={movieDetails?.Title}\n                subheader={movieDetails?.Year}\n              />\n\n              <CardContent>\n                <div className={classes.tiles} title=\"Country\">\n                  {movieDetails?.Country}\n                </div>\n                <div className={classes.tiles} title=\"Language\">\n                  {movieDetails?.Language}\n                </div>\n                <div className={classes.tiles} title=\"Rating\">\n                  {movieDetails?.Rating}\n                </div>\n                <br />\n                <br />\n                <div className={classes.clear}> </div>\n                <div>\n                  Film World:{\" \"}\n                  <span\n                    className={PriceCompare(\n                      filmWorldMovieDetails?.Price,\n                      cinemaWorldMovieDetails?.Price,\n                      classes\n                    )}\n                  >\n                    {filmWorldMovieDetails?.Price != null\n                      ? `$ ${filmWorldMovieDetails?.Price}`\n                      : \"Not Available\"}\n                  </span>\n                  <br />\n                  Cinema World:{\" \"}\n                  <span\n                    className={PriceCompare(\n                      cinemaWorldMovieDetails?.Price,\n                      filmWorldMovieDetails?.Price,\n                      classes\n                    )}\n                  >\n                    {cinemaWorldMovieDetails?.Price != null\n                      ? `$ ${cinemaWorldMovieDetails?.Price}`\n                      : \"Not Available\"}\n                  </span>\n                </div>\n                <br />\n                <Typography paragraph>Plot:</Typography>\n                <Typography paragraph>{filmWorldMovieDetails?.Plot}</Typography>\n              </CardContent>\n            </Card>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(MovieSummary);\n","import React from \"react\";\nimport {\n  withStyles,\n  WithStyles,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Container,\n  TableContainer,\n  Paper,\n} from \"@material-ui/core\";\nimport styles from \"./MovieList.styles\";\nimport { IMovieAggregate } from \"../common/types/IMovie\";\nimport IMovieDetails from \"../common/types/IMovieDetails\";\nimport MovieSummary from \"./MovieSummary\";\n\ninterface IState {\n  showPopup: boolean;\n}\n\ninterface IProps extends WithStyles<typeof styles> {\n  movies: IMovieAggregate[];\n  filmWorldMovieDetails: IMovieDetails | undefined;\n  cinemaWorldMovieDetails: IMovieDetails | undefined;\n  onSelectMovie: (movie: IMovieAggregate) => Promise<void>;\n}\n\nclass MovieList extends React.Component<IProps, IState> {\n  readonly state: Readonly<IState> = { showPopup: false };\n\n  private handleSelectMovie = async (movie: IMovieAggregate) => {\n    this.showPopup();\n    await this.props.onSelectMovie(movie);\n    \n  };\n\n  showPopup() {\n    this.setState({ showPopup: true });\n  }\n\n  closePopup = () => {\n    this.setState({ showPopup: false });\n  };\n\n  render() {\n    const {\n      movies,\n      filmWorldMovieDetails,\n      cinemaWorldMovieDetails,\n      classes,\n    } = this.props;\n\n    return (\n      <div>\n        <Container>\n          <TableContainer component={Paper}>\n            <Table\n              className={classes.summaryTable}\n              size=\"small\"\n              stickyHeader\n            >\n              <TableHead className={classes.head}>\n                <TableRow className={classes.head}>\n                  <TableCell>Movie Title</TableCell>\n                  <TableCell>Year</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {movies?.map((movie, index) => {\n                  return (\n                    <React.Fragment key={index}>\n                      <TableRow\n                        hover\n                        className={classes.menuRow}\n                        style={\n                          index % 2\n                            ? { background: \"rgba(0, 0, 0, 0.04)\" }\n                            : { background: \"white\" }\n                        }\n                        onClick={() => {\n                          this.handleSelectMovie(movie);\n                        }}\n                      >\n                        <TableCell>\n                          <div>{movie.Title}</div>\n                        </TableCell>\n                        <TableCell>\n                          <div>{movie.Year}</div>\n                        </TableCell>\n                      </TableRow>\n                    </React.Fragment>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Container>\n        {this.state.showPopup ? (\n          <MovieSummary\n            filmWorldMovieDetails={filmWorldMovieDetails}\n            cinemaWorldMovieDetails={cinemaWorldMovieDetails}\n            onClosePopup={this.closePopup}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(MovieList);\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom:30\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Movie World BoxOffice\r\n          </Typography>\r\n          \r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function SimpleCard() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n         Oops! something went wrong. we are tryig again. Please wait...\r\n        </Typography>\r\n        \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./home.css\";\nimport { IMovie, IMovieAggregate } from \"../common/types/IMovie\";\nimport BoxOfficeService from \"../services/BoxOfficeService\";\nimport IMovieDetails from \"../common/types/IMovieDetails\";\nimport MovieList from \"../Movies/MovieList\";\nimport NavBar from \"../Component/navbar/NavBar\";\nimport Spinner from \"../Component/UI/Spinner\";\nimport NoData from \"../Component/NoData/NoData\";\nimport { Container } from \"@material-ui/core\";\n\ninterface IState {\n  movies: IMovieAggregate[] | undefined;\n  filmWorldMovieDetails: IMovieDetails | undefined;\n  cinemaWorldMovieDetails: IMovieDetails | undefined;\n  loader: Boolean | undefined;\n  error: Boolean | undefined;\n}\n\nclass HomeContainer extends React.Component {\n  readonly state: Readonly<IState> = {\n    movies: undefined,\n    filmWorldMovieDetails: undefined,\n    cinemaWorldMovieDetails: undefined,\n    loader: false,\n    error: false,\n  };\n\n  private _isMounted = false;\n\n  async componentDidMount() {\n    this._isMounted = true;\n\n    await this.loadMovies();\n  \n  }\n\n  handleFilmWorld = (result: IMovie[]) => {\n    localStorage.setItem(\"movieListFilmWorld\", JSON.stringify(result));\n  };\n\n  handleCinemaWorld = (result: IMovie[]) => {\n    localStorage.setItem(\"movieListCinemaWorld\", JSON.stringify(result));\n  };\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n   async loadMovies() {\n    try {\n      this.updateState({ loader: true });\n      if (\n        localStorage.getItem(\"movieListFilmWorld\") === null ||\n        localStorage.getItem(\"movieListCinemaWorld\") === null \n      ) {\n       const [FWMovies,CWMovies] = await Promise.all([\n          BoxOfficeService.getMovies(\"filmworld\"),\n          BoxOfficeService.getMovies(\"cinemaworld\")\n        ]);\n        localStorage.setItem(\"movieListFilmWorld\", JSON.stringify(FWMovies));\n        localStorage.setItem(\"movieListCinemaWorld\", JSON.stringify(CWMovies));\n        \n      }\n      \n      this.PopulateMovieList();\n      this.updateState({ loader: false, error: false });\n\n    } catch (e) {\n      this.updateState({ loader: false, error: true });\n      await this.loadMovies();\n    }    \n  }\n\n  onSelectMovie = async (movie: IMovieAggregate) => {\n    try {\n      this.updateState({\n        filmWorldMovieDetails: undefined,\n         cinemaWorldMovieDetails:  undefined        \n       }); \n\n      const filmWorldMovieResquest =  BoxOfficeService.getMovieById(\n        \"filmworld\",\n        movie.FilmWorldID\n      );\n      const cinemaWorldRequest =  BoxOfficeService.getMovieById(\n        \"cinemaworld\",\n        movie.CinemaWorldID\n      );\n\n      const[ filmWorld,cinemaWorld] = await Promise.allSettled([filmWorldMovieResquest, cinemaWorldRequest]);\n\n  \n      this.updateState({\n        filmWorldMovieDetails: filmWorld.status === \"fulfilled\" ? filmWorld.value : undefined,\n         cinemaWorldMovieDetails: cinemaWorld.status === \"fulfilled\" ? cinemaWorld.value : undefined        \n       }); \n\n    } catch (e) {\n      this.updateState({ loader: false });\n    }\n  };\n\n  private PopulateMovieList() {\n   \n    var movieListFilmWorld = localStorage.getItem(\"movieListFilmWorld\") != null\n      ? JSON.parse(localStorage?.getItem(\"movieListFilmWorld\") ?? \"\")\n      : \"\";\n\n    var movieListCinemaWorld = localStorage.getItem(\"movieListCinemaWorld\") != null\n      ? JSON.parse(localStorage?.getItem(\"movieListCinemaWorld\") ?? \"\")\n      : \"\";\n\n    let movieList: IMovieAggregate[] = [];\n\n    var movies = movieListFilmWorld.Movies?? movieListCinemaWorld.Movies;\n\n    for (let movie of movies) {\n      let movieAggregate: IMovieAggregate = {\n        Title: movie.Title,\n        Year: movie.Year,\n        Poster: movie.Poster,\n        FilmWorldID: movie.ID,\n        CinemaWorldID: movieListCinemaWorld.Movies.find((c: IMovie) => c.Title === movie.Title).ID,\n        Type: movie.Type,\n      };\n\n      movieList.push(movieAggregate);\n    }\n\n    this.updateState({ movies: movieList });\n  }\n\n  updateState(updatedState: Partial<IState>) {\n    if (this._isMounted) {\n      this.setState(updatedState);\n    }\n  }\n\n  render() {\n    const {\n      movies,\n      filmWorldMovieDetails,\n      cinemaWorldMovieDetails,\n    } = this.state;\n\n    return (\n      <div>\n        <NavBar />\n        {this.state.loader ? <Spinner /> : \"\"}\n        {movies != null ? (\n          <MovieList\n            movies={movies}\n            filmWorldMovieDetails={filmWorldMovieDetails}\n            cinemaWorldMovieDetails={cinemaWorldMovieDetails}\n            onSelectMovie={this.onSelectMovie}\n          />\n        ) : (\n          \"\"\n        )}\n\n        {!this.state.loader && this.state.error ? (\n          <Container>\n            <NoData />\n          </Container>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nexport default HomeContainer;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport HomeContainer from './home/HomeContainer';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HomeContainer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}